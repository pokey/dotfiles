# Make shared libs work
export LD_LIBRARY_PATH=/usr/local/lib

# Core dumps
ulimit -c unlimited

export GEM_HOME=$HOME/.gem
export N_PREFIX=$HOME/n

# Setup PATH
export PATH=$PATH:/usr/local/texlive/2011/bin/x86_64-linux:~/bin:/usr/local/ssl/bin:~/bin:~/packer
export PATH=$PATH:/Library/TeX/Root/bin/x86_64-darwin
export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH=$PATH:/usr/local/sbin
export PATH=$PATH:$HOME/.cargo/bin
export PATH=$PATH:/usr/local/Cellar/qt@5.5/5.5.1_1/bin
export PATH=$GEM_HOME/bin:$PATH
export PATH=$N_PREFIX/bin:$PATH
export MANPATH=$MANPATH:/usr/local/texlive/2011/texmf/doc/man
export INFOPATH=$INFOPATH:/usr/local/texlive/2011/texmf/doc/info

export EXA_LA_OPTIONS="-l --git --color-scale --classify --group-directories-first"
export LESS_OPTIONS="--tabs=3 -RXF"

# Other envvars
export VISUAL="nvim --noplugin"
export EDITOR="nvim --noplugin"
export REACT_EDITOR="code"
export VIMPAGER_VIM="nvim"
export PAGER="less $LESS_OPTIONS"
export VIMCAT="$HOME/.config/nvim/plugged/vimpager/vimcat -u NONE"
export CTAGS_FLAGS='--tag-relative=yes --fields=+l --extras=+q --regex-python=/^@binding\("(.+)"\)$/\1/f/'
# Hack around https://github.com/junegunn/fzf/issues/809
export FZF_TMUX=1

[ -f $HOME/.custom.rc ] && source $HOME/.custom.rc

# Make vim tty stuff behave nicely
stty ixany
stty ixoff -ixon
stty stop undef
stty start undef
vim()
{
    # No ttyctl, so we need to save and then restore terminal settings
    local STTYOPTS="$(stty -g)"
    stty stop '' -ixoff
    command nvim "$@"
    stty "$STTYOPTS"
}

source "$HOME/.sh/aliases.sh"

[ -f /usr/libexec/java_home ] && export JAVA_HOME=$(/usr/libexec/java_home)

# fasd
fasd_cache="$HOME/.fasd-init-bash"
if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
   fasd --init auto >| "$fasd_cache"
fi
source "$fasd_cache"
unset fasd_cache

# fzf
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow -g "!{.git,node_modules}/*" 2> /dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_OPTS="--exact"

source "$HOME/.sh/commands.sh"

# Init hub
eval "$(hub alias -s)"

# Init pyenv
if which pyenv > /dev/null; then
   eval "$(pyenv init --path)"
   eval "$(pyenv init -)"
fi
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# http://marianposaceanu.com/articles/macos-sierra-upgrade-from-a-developers-perspective
# https://discussions.apple.com/thread/7682417?start=0&tstart=0
# https://www.reddit.com/r/MacOS/comments/4vro9d/macos_sierra_key_repeat/
if test "$(uname)" = "Darwin"; then
   defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
   defaults write NSGlobalDomain KeyRepeat -int 1
   defaults write NSGlobalDomain InitialKeyRepeat -int 20
fi

# Init thefuck
eval $(thefuck --alias)
alias fu='fuck'

# man page colors
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin bold
export LESS_TERMCAP_md=$'\E[1;36m'     # begin blink
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline

export PYTHONBREAKPOINT=ipdb.set_trace

export PATH="/usr/local/opt/ruby/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/ruby/lib"
export CPPFLAGS="-I/usr/local/opt/ruby/include"
export PKG_CONFIG_PATH="/usr/local/opt/ruby/lib/pkgconfig"

eval "$(rbenv init -)"