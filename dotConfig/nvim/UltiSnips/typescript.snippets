global !p
def stripType(name):
   if name.endswith('.ios'):
      return name[:-4]
   return name
endglobal

snippet rc "React component" b
import React from 'react';

const `!p snip.rv = stripType(snip.basename)` = (${1:\{$2\}}) => (
	$0
);

export default `!p snip.rv = stripType(snip.basename)`;
endsnippet

snippet c "constructor" b
constructor(props) {
	super(props);

	$0
}
endsnippet

snippet cf "function" b
$1($2) {
    $0
}
endsnippet

snippet b "bind" b
this.$1 = this.$1.bind(this);
endsnippet

snippet p "React component props" b
const {$0} = this.props;
endsnippet

snippet ed "Export" b
export default ${1:`!p snip.rv = stripType(snip.basename)`};
endsnippet

snippet ust "useState" b
const [$1, set${1/\w+\s*/\u$0/g}] = useState(${3:''})${0:;}
endsnippet

snippet useEffect "useEffect" b
useEffect(() => {
	$1
}, [$2])
endsnippet

snippet i "Import" b
import ${1:\{$2\}} from '$3';
endsnippet

snippet ir "Import react" b
import React, {$0} from 'react';
endsnippet

snippet irn "Import react native" b
import {${1:View${2:, $3}}} from 'react-native';
endsnippet

snippet s "Styles" b
const styles = StyleSheet.create({
${0:	container: {
		flex: 1,
	}
}});
endsnippet

snippet se "Style entry" b
	$1: {
		$0
	},
endsnippet

snippet d "Debug" b
console.log(\`$1: $\{JSON.stringify($1)\}\`);
endsnippet

snippet cl "Console log" b
console.log(${1:\`$2\`});
endsnippet

snippet tl "Angular log" b
this.$log.info('$1', $2)
endsnippet

snippet describe "describe" b
describe('$1', function () {
	it('$2', function () {
		$0
	});
});
endsnippet

snippet it "it" b
it('$1', function () {
	$0
});
endsnippet
